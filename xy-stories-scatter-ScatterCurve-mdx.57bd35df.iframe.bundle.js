"use strict";(self.webpackChunkchsk=self.webpackChunkchsk||[]).push([[1770],{"./packages/xy/stories/scatter/ScatterCurve.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AveragedDownsampledIndex0:()=>AveragedDownsampledIndex0,AveragedDownsampledIndex1:()=>AveragedDownsampledIndex1,DownsampleIndex0:()=>DownsampleIndex0,DownsampleIndex1:()=>DownsampleIndex1,HistoricAverage:()=>HistoricAverage,LinearCurve:()=>LinearCurve,MultipleSeries:()=>MultipleSeries,StepCurve:()=>StepCurve,SymmetricAverage:()=>SymmetricAverage,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _LinearCurve$paramete,_LinearCurve$paramete2,_LinearCurve$paramete3,_StepCurve$parameters,_StepCurve$parameters2,_StepCurve$parameters3,_MultipleSeries$param,_MultipleSeries$param2,_MultipleSeries$param3,_DownsampleIndex0$par,_DownsampleIndex0$par2,_DownsampleIndex0$par3,_DownsampleIndex1$par,_DownsampleIndex1$par2,_DownsampleIndex1$par3,_HistoricAverage$para,_HistoricAverage$para2,_HistoricAverage$para3,_SymmetricAverage$par,_SymmetricAverage$par2,_SymmetricAverage$par3,_AveragedDownsampledI,_AveragedDownsampledI2,_AveragedDownsampledI3,_AveragedDownsampledI4,_AveragedDownsampledI5,_AveragedDownsampledI6,_chsk_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/core/dist/chsk-core.es.js"),_src__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/xy/src/scatter/ScatterCurve.tsx"),_src__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/xy/src/scatter/Scatter.tsx"),_decorators__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/xy/stories/scatter/decorators.tsx"),_dataPolynomials_json__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/xy/stories/scatter/dataPolynomials.json"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const __WEBPACK_DEFAULT_EXPORT__={title:"Addons/XY/Scatter/ScatterCurve",component:_src__WEBPACK_IMPORTED_MODULE_1__.n};var LinearCurve={name:"linear curve",args:{ids:["quadratic"],curve:"Linear"},decorators:[_decorators__WEBPACK_IMPORTED_MODULE_2__.WC]},StepCurve={name:"step curve",args:{ids:["quadratic"],curve:"Step"},decorators:[_decorators__WEBPACK_IMPORTED_MODULE_2__.WC]},MultipleSeries={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chsk_core__WEBPACK_IMPORTED_MODULE_3__.kL2,{size:[400,300],padding:[40,40,60,60],style:{display:"inline-block"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_src__WEBPACK_IMPORTED_MODULE_4__.b,{data:_dataPolynomials_json__WEBPACK_IMPORTED_MODULE_5__,x:"x",y:"y",scaleX:{variant:"linear",domain:[0,"auto"]},scaleY:{variant:"linear",domain:[0,"auto"]},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chsk_core__WEBPACK_IMPORTED_MODULE_3__.RDh,{variant:"bottom",label:"x (a.u.)"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chsk_core__WEBPACK_IMPORTED_MODULE_3__.RDh,{variant:"left",label:"y (a.u.)"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_1__.n,{ids:["linear"],curve:"Step",style:{strokeWidth:3}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_1__.n,{ids:["quadratic"],curve:"Linear",style:{strokeDasharray:"6 6",strokeWidth:3}})]})})},name:"multiple series"},DownsampleIndex0={name:"downsample, index 0",args:{ids:["A"],curve:"Natural",downsampleFactor:.5,downsampleIndex:0},decorators:[_decorators__WEBPACK_IMPORTED_MODULE_2__.qb]},DownsampleIndex1={name:"downsample, index 1",args:{ids:["A"],curve:"Natural",downsampleFactor:.5,downsampleIndex:1},decorators:[_decorators__WEBPACK_IMPORTED_MODULE_2__.qb]},HistoricAverage={name:"historic average",args:{ids:["A"],curve:"Natural",convolutionMask:[1,1,1],convolutionOffset:0},decorators:[_decorators__WEBPACK_IMPORTED_MODULE_2__.qb]},SymmetricAverage={name:"symmetric average",args:{ids:["A"],curve:"Natural",convolutionMask:[1,1,1],convolutionOffset:-1},decorators:[_decorators__WEBPACK_IMPORTED_MODULE_2__.qb]},AveragedDownsampledIndex0={name:"averaged, downsampled, index 0",args:{ids:["A"],curve:"Natural",convolutionMask:[1,1,1],convolutionOffset:-1,downsampleFactor:.5,downsampleIndex:0},decorators:[_decorators__WEBPACK_IMPORTED_MODULE_2__.qb]},AveragedDownsampledIndex1={name:"averaged, downsampled, index 1",args:{ids:["A"],curve:"Natural",convolutionMask:[1,1,1],convolutionOffset:-1,downsampleFactor:.5,downsampleIndex:1},decorators:[_decorators__WEBPACK_IMPORTED_MODULE_2__.qb]};LinearCurve.parameters=_extends({},LinearCurve.parameters,{docs:_extends({},null==(_LinearCurve$paramete=LinearCurve.parameters)?void 0:_LinearCurve$paramete.docs,{source:_extends({originalSource:"{\n  name: 'linear curve',\n  args: {\n    ids: ['quadratic'],\n    curve: 'Linear'\n  },\n  decorators: [ChartScatterDecorator]\n}"},null==(_LinearCurve$paramete2=LinearCurve.parameters)||null==(_LinearCurve$paramete3=_LinearCurve$paramete2.docs)?void 0:_LinearCurve$paramete3.source)})}),StepCurve.parameters=_extends({},StepCurve.parameters,{docs:_extends({},null==(_StepCurve$parameters=StepCurve.parameters)?void 0:_StepCurve$parameters.docs,{source:_extends({originalSource:"{\n  name: 'step curve',\n  args: {\n    ids: ['quadratic'],\n    curve: 'Step'\n  },\n  decorators: [ChartScatterDecorator]\n}"},null==(_StepCurve$parameters2=StepCurve.parameters)||null==(_StepCurve$parameters3=_StepCurve$parameters2.docs)?void 0:_StepCurve$parameters3.source)})}),MultipleSeries.parameters=_extends({},MultipleSeries.parameters,{docs:_extends({},null==(_MultipleSeries$param=MultipleSeries.parameters)?void 0:_MultipleSeries$param.docs,{source:_extends({originalSource:"{\n  render: () => <Chart size={[400, 300]} padding={[40, 40, 60, 60]} style={{\n    display: 'inline-block'\n  }}>\n            <Scatter data={data} x={'x'} y={'y'} scaleX={{\n      variant: 'linear',\n      domain: [0, 'auto']\n    }} scaleY={{\n      variant: 'linear',\n      domain: [0, 'auto']\n    }}>\n                <Axis variant={'bottom'} label={'x (a.u.)'} />\n                <Axis variant={'left'} label={'y (a.u.)'} />\n                <ScatterCurve ids={['linear']} curve=\"Step\" style={{\n        strokeWidth: 3\n      }} />\n                <ScatterCurve ids={['quadratic']} curve=\"Linear\" style={{\n        strokeDasharray: '6 6',\n        strokeWidth: 3\n      }} />\n            </Scatter>\n        </Chart>,\n  name: 'multiple series'\n}"},null==(_MultipleSeries$param2=MultipleSeries.parameters)||null==(_MultipleSeries$param3=_MultipleSeries$param2.docs)?void 0:_MultipleSeries$param3.source)})}),DownsampleIndex0.parameters=_extends({},DownsampleIndex0.parameters,{docs:_extends({},null==(_DownsampleIndex0$par=DownsampleIndex0.parameters)?void 0:_DownsampleIndex0$par.docs,{source:_extends({originalSource:"{\n  name: 'downsample, index 0',\n  args: {\n    ids: ['A'],\n    curve: 'Natural',\n    downsampleFactor: 0.5,\n    downsampleIndex: 0\n  },\n  decorators: [ChartWithNoisyPointsDecorator]\n}"},null==(_DownsampleIndex0$par2=DownsampleIndex0.parameters)||null==(_DownsampleIndex0$par3=_DownsampleIndex0$par2.docs)?void 0:_DownsampleIndex0$par3.source)})}),DownsampleIndex1.parameters=_extends({},DownsampleIndex1.parameters,{docs:_extends({},null==(_DownsampleIndex1$par=DownsampleIndex1.parameters)?void 0:_DownsampleIndex1$par.docs,{source:_extends({originalSource:"{\n  name: 'downsample, index 1',\n  args: {\n    ids: ['A'],\n    curve: 'Natural',\n    downsampleFactor: 0.5,\n    downsampleIndex: 1\n  },\n  decorators: [ChartWithNoisyPointsDecorator]\n}"},null==(_DownsampleIndex1$par2=DownsampleIndex1.parameters)||null==(_DownsampleIndex1$par3=_DownsampleIndex1$par2.docs)?void 0:_DownsampleIndex1$par3.source)})}),HistoricAverage.parameters=_extends({},HistoricAverage.parameters,{docs:_extends({},null==(_HistoricAverage$para=HistoricAverage.parameters)?void 0:_HistoricAverage$para.docs,{source:_extends({originalSource:"{\n  name: 'historic average',\n  args: {\n    ids: ['A'],\n    curve: 'Natural',\n    convolutionMask: [1, 1, 1],\n    convolutionOffset: 0\n  },\n  decorators: [ChartWithNoisyPointsDecorator]\n}"},null==(_HistoricAverage$para2=HistoricAverage.parameters)||null==(_HistoricAverage$para3=_HistoricAverage$para2.docs)?void 0:_HistoricAverage$para3.source)})}),SymmetricAverage.parameters=_extends({},SymmetricAverage.parameters,{docs:_extends({},null==(_SymmetricAverage$par=SymmetricAverage.parameters)?void 0:_SymmetricAverage$par.docs,{source:_extends({originalSource:"{\n  name: 'symmetric average',\n  args: {\n    ids: ['A'],\n    curve: 'Natural',\n    convolutionMask: [1, 1, 1],\n    convolutionOffset: -1\n  },\n  decorators: [ChartWithNoisyPointsDecorator]\n}"},null==(_SymmetricAverage$par2=SymmetricAverage.parameters)||null==(_SymmetricAverage$par3=_SymmetricAverage$par2.docs)?void 0:_SymmetricAverage$par3.source)})}),AveragedDownsampledIndex0.parameters=_extends({},AveragedDownsampledIndex0.parameters,{docs:_extends({},null==(_AveragedDownsampledI=AveragedDownsampledIndex0.parameters)?void 0:_AveragedDownsampledI.docs,{source:_extends({originalSource:"{\n  name: 'averaged, downsampled, index 0',\n  args: {\n    ids: ['A'],\n    curve: 'Natural',\n    convolutionMask: [1, 1, 1],\n    convolutionOffset: -1,\n    downsampleFactor: 0.5,\n    downsampleIndex: 0\n  },\n  decorators: [ChartWithNoisyPointsDecorator]\n}"},null==(_AveragedDownsampledI2=AveragedDownsampledIndex0.parameters)||null==(_AveragedDownsampledI3=_AveragedDownsampledI2.docs)?void 0:_AveragedDownsampledI3.source)})}),AveragedDownsampledIndex1.parameters=_extends({},AveragedDownsampledIndex1.parameters,{docs:_extends({},null==(_AveragedDownsampledI4=AveragedDownsampledIndex1.parameters)?void 0:_AveragedDownsampledI4.docs,{source:_extends({originalSource:"{\n  name: 'averaged, downsampled, index 1',\n  args: {\n    ids: ['A'],\n    curve: 'Natural',\n    convolutionMask: [1, 1, 1],\n    convolutionOffset: -1,\n    downsampleFactor: 0.5,\n    downsampleIndex: 1\n  },\n  decorators: [ChartWithNoisyPointsDecorator]\n}"},null==(_AveragedDownsampledI5=AveragedDownsampledIndex1.parameters)||null==(_AveragedDownsampledI6=_AveragedDownsampledI5.docs)?void 0:_AveragedDownsampledI6.source)})});var __namedExportsOrder=["LinearCurve","StepCurve","MultipleSeries","DownsampleIndex0","DownsampleIndex1","HistoricAverage","SymmetricAverage","AveragedDownsampledIndex0","AveragedDownsampledIndex1"]},"./packages/xy/stories/scatter/ScatterCurve.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_storybook_addon_essentials_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_ScatterCurve_stories__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/xy/stories/scatter/ScatterCurve.stories.tsx");const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_storybook_addon_essentials_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.ah)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{})})):_createMdxContent();function _createMdxContent(){const _components=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2"},(0,_storybook_addon_essentials_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.ah)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"scattercurve",children:"ScatterCurve"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.h_,{of:_ScatterCurve_stories__WEBPACK_IMPORTED_MODULE_4__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ScatterCurve"})," draws a curve based on a data series."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.Ed,{of:_ScatterCurve_stories__WEBPACK_IMPORTED_MODULE_4__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"curves",children:"Curves"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The prop ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"curve"})," controls the type of interpolation between points."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.Xz,{of:_ScatterCurve_stories__WEBPACK_IMPORTED_MODULE_4__.LinearCurve}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.Xz,{of:_ScatterCurve_stories__WEBPACK_IMPORTED_MODULE_4__.StepCurve}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Note that ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ScatterCurve"})," uses all the points in a series, and connects points in the order provided.\nFor noisy data, this may produce spiky lines.\nTo display a best-fit line instead, see ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ScatterRegression"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"multiple-series",children:"Multiple series"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Use ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ScatterCurve"})," multiple times to overlay multiple series.\nEach series can have a distinct curve setting and css style."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.Xz,{of:_ScatterCurve_stories__WEBPACK_IMPORTED_MODULE_4__.MultipleSeries}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"down-sampling",children:"Down-sampling"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["By default, ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ScatterCurve"})," draws a line through all the data points in a series.\nTo reduce the complexity of the curve, set prop ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"downsampleFactor"})," to use a fraction of the data points.\nThe relevant points are extracted at regular intervals.\nA prop ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"downsampleIndex"})," determines the first data point of the down-sampled curve."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.Xz,{of:_ScatterCurve_stories__WEBPACK_IMPORTED_MODULE_4__.DownsampleIndex0}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.Xz,{of:_ScatterCurve_stories__WEBPACK_IMPORTED_MODULE_4__.DownsampleIndex1}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The examples above show that starting down-sampling from different data points can produce quite different curve shapes.\nThis makes down-sampling, when used on its own, unreliable as a smoothing technique.\nHowever, it can be attractive when used together with convolution (see next section)."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"convolution",children:"Convolution"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ScatterCurve"})," can perform a convolution of the data with an array-like mask.\nThis can be used to display moving averages of various types: simple / historical moving average, symmetrical averages,\nand weighted averages."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The properties of the convolution are specified in prop ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"convolutionMask"})," and prop ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"convolutionOffset"}),".\nFor example, in a time-series context, it may be desirable to compute a moving average of three time points in the immediate past.\nThis would correspond to a mask ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"[1, 1, 1]"})," and an offset of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"0"})," (the default).\nIn another context, it may be desirable to compute a smoothing curve by averaging three nearby data points in a symmetrical fashion.\nThis would be achieved by setting the convolution offset to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"-1"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.Xz,{of:_ScatterCurve_stories__WEBPACK_IMPORTED_MODULE_4__.HistoricAverage}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.Xz,{of:_ScatterCurve_stories__WEBPACK_IMPORTED_MODULE_4__.SymmetricAverage}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Note that the domain of the resulting curve shifts depending on ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"convolutionOffset"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Once a curve is smoothed with convolution, it may be attractive to perform down-sampling."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.Xz,{of:_ScatterCurve_stories__WEBPACK_IMPORTED_MODULE_4__.AveragedDownsampledIndex0}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.Xz,{of:_ScatterCurve_stories__WEBPACK_IMPORTED_MODULE_4__.AveragedDownsampledIndex1}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The two examples above, which differ in ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"downsampleIndex"}),", produce qualitatively similar shapes.\nAs such, the arbitrary aspects of down-sampling become less pronounced after convolution."]})]})}}}}]);
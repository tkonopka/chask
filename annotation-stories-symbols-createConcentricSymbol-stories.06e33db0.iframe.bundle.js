"use strict";(self.webpackChunkchsk=self.webpackChunkchsk||[]).push([[3992],{"./packages/annotation/stories/symbols/createConcentricSymbol.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Background:()=>Background,Foreground:()=>Foreground,Hybrid:()=>Hybrid,Squares:()=>Squares,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _Background$parameter,_Background$parameter2,_Foreground$parameter,_Foreground$parameter2,_Squares$parameters,_Squares$parameters2,_Hybrid$parameters,_Hybrid$parameters2,_chsk_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/core/dist/chsk-core.es.js"),_src__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/annotation/src/symbols/createConcentricSymbol.tsx"),_decorators__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/annotation/stories/symbols/decorators.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const __WEBPACK_DEFAULT_EXPORT__={title:"Addons/Annotation/Symbols/createConcentricSymbol",component:_src__WEBPACK_IMPORTED_MODULE_1__.b};var Background={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_chsk_core__WEBPACK_IMPORTED_MODULE_2__.kL2,{size:[200,140],padding:[20,20,20,20],style:{display:"inline-block"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chsk_core__WEBPACK_IMPORTED_MODULE_2__.Tgp,{variant:"inner"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_decorators__WEBPACK_IMPORTED_MODULE_3__.ql,{cx:80,cy:50,r:20,style:{fill:"#dd9999",stroke:"#993333",strokeWidth:"1px"}})]})},name:"background"},Foreground={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_chsk_core__WEBPACK_IMPORTED_MODULE_2__.kL2,{size:[200,140],padding:[20,20,20,20],style:{display:"inline-block"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chsk_core__WEBPACK_IMPORTED_MODULE_2__.Tgp,{variant:"inner"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_decorators__WEBPACK_IMPORTED_MODULE_3__.SZ,{cx:80,cy:50,r:20,style:{fill:"#dd9999",stroke:"#993333",strokeWidth:"1px"}})]})},name:"foreground"},Squares={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_chsk_core__WEBPACK_IMPORTED_MODULE_2__.kL2,{size:[200,140],padding:[20,20,20,20],style:{display:"inline-block"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chsk_core__WEBPACK_IMPORTED_MODULE_2__.Tgp,{variant:"inner"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_decorators__WEBPACK_IMPORTED_MODULE_3__.oW,{cx:80,cy:50,r:20,style:{fill:"#dd9999",stroke:"#993333",strokeWidth:"1px"}})]})},name:"squares"},Hybrid={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_chsk_core__WEBPACK_IMPORTED_MODULE_2__.kL2,{size:[200,140],padding:[20,20,20,20],style:{display:"inline-block"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chsk_core__WEBPACK_IMPORTED_MODULE_2__.Tgp,{variant:"inner"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_decorators__WEBPACK_IMPORTED_MODULE_3__.dY,{cx:80,cy:50,r:20,style:{fill:"#dd9999",stroke:"#993333",strokeWidth:"1px"}})]})},name:"hybrid"};Background.parameters=_extends({},Background.parameters,{docs:_extends({},null==(_Background$parameter=Background.parameters)?void 0:_Background$parameter.docs,{source:_extends({originalSource:"{\n  render: () => <Chart size={[200, 140]} padding={[20, 20, 20, 20]} style={{\n    display: 'inline-block'\n  }}>\n            <Surface variant={'inner'} />\n            <ConcentricCirclesBg cx={80} cy={50} r={20} style={{\n      fill: '#dd9999',\n      stroke: '#993333',\n      strokeWidth: '1px'\n    }} />\n        </Chart>,\n  name: 'background'\n}"},null==(_Background$parameter2=Background.parameters)||null==(_Background$parameter2=_Background$parameter2.docs)?void 0:_Background$parameter2.source)})}),Foreground.parameters=_extends({},Foreground.parameters,{docs:_extends({},null==(_Foreground$parameter=Foreground.parameters)?void 0:_Foreground$parameter.docs,{source:_extends({originalSource:"{\n  render: () => <Chart size={[200, 140]} padding={[20, 20, 20, 20]} style={{\n    display: 'inline-block'\n  }}>\n            <Surface variant={'inner'} />\n            <ConcentricCirclesFg cx={80} cy={50} r={20} style={{\n      fill: '#dd9999',\n      stroke: '#993333',\n      strokeWidth: '1px'\n    }} />\n        </Chart>,\n  name: 'foreground'\n}"},null==(_Foreground$parameter2=Foreground.parameters)||null==(_Foreground$parameter2=_Foreground$parameter2.docs)?void 0:_Foreground$parameter2.source)})}),Squares.parameters=_extends({},Squares.parameters,{docs:_extends({},null==(_Squares$parameters=Squares.parameters)?void 0:_Squares$parameters.docs,{source:_extends({originalSource:"{\n  render: () => <Chart size={[200, 140]} padding={[20, 20, 20, 20]} style={{\n    display: 'inline-block'\n  }}>\n            <Surface variant={'inner'} />\n            <ConcentricSquares cx={80} cy={50} r={20} style={{\n      fill: '#dd9999',\n      stroke: '#993333',\n      strokeWidth: '1px'\n    }} />\n        </Chart>,\n  name: 'squares'\n}"},null==(_Squares$parameters2=Squares.parameters)||null==(_Squares$parameters2=_Squares$parameters2.docs)?void 0:_Squares$parameters2.source)})}),Hybrid.parameters=_extends({},Hybrid.parameters,{docs:_extends({},null==(_Hybrid$parameters=Hybrid.parameters)?void 0:_Hybrid$parameters.docs,{source:_extends({originalSource:"{\n  render: () => <Chart size={[200, 140]} padding={[20, 20, 20, 20]} style={{\n    display: 'inline-block'\n  }}>\n            <Surface variant={'inner'} />\n            <ConcentricHybrid cx={80} cy={50} r={20} style={{\n      fill: '#dd9999',\n      stroke: '#993333',\n      strokeWidth: '1px'\n    }} />\n        </Chart>,\n  name: 'hybrid'\n}"},null==(_Hybrid$parameters2=Hybrid.parameters)||null==(_Hybrid$parameters2=_Hybrid$parameters2.docs)?void 0:_Hybrid$parameters2.source)})});var __namedExportsOrder=["Background","Foreground","Squares","Hybrid"]}}]);
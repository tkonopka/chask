"use strict";(self.webpackChunkchsk=self.webpackChunkchsk||[]).push([[2027],{"./packages/annotation/stories/flowchart/FlowPath.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Template:()=>Template,complexLine:()=>complexLine,default:()=>FlowPath_stories,naturalCurve:()=>naturalCurve,simpleLine:()=>simpleLine,slowTransition:()=>slowTransition});var react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),src=__webpack_require__("./packages/annotation/src/index.tsx"),chsk_core_es=__webpack_require__("./packages/core/dist/chsk-core.es.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),FlowMilestones=function FlowMilestones(_ref){var points=_ref.points,_ref$curve=_ref.curve,curve=void 0===_ref$curve?"Linear":_ref$curve,style=_ref.style,transition=_ref.transition,ref=(0,react.useRef)(null);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)("button",{onClick:function onClick(){return function toggleMilestone(m){var _ref$current;null==(_ref$current=ref.current)||_ref$current.toggleMilestone(m)}("A")},children:"Toggle milestone"})}),(0,jsx_runtime.jsxs)(chsk_core_es.kL2,{fref:ref,size:[400,300],padding:[40,40,40,40],style:{margin:"0.5em",border:"solid 1px #aa3333"},theme:{path:{default:{fillOpacity:0}}},children:[(0,jsx_runtime.jsx)("defs",{children:(0,jsx_runtime.jsx)(src.Po,{id:"triangle",variant:"Triangle",size:20,style:{fill:"#222222",fillOpacity:1}})}),(0,jsx_runtime.jsx)(chsk_core_es.Tgp,{variant:"inner"}),(0,jsx_runtime.jsxs)(chsk_core_es.G7x,{scaleX:{variant:"band",domain:["A","B","C","D","E","F"],padding:.2},scaleY:{variant:"linear",domain:[0,100]},children:[(0,jsx_runtime.jsx)(chsk_core_es.RDh,{variant:"bottom"}),(0,jsx_runtime.jsx)(chsk_core_es.RDh,{variant:"left"}),(0,jsx_runtime.jsx)(chsk_core_es.lqb,{initial:"invisible",initialOn:"A",children:(0,jsx_runtime.jsx)(src.Qs,{points,curve,transition,style,markerEnd:"triangle"})})]})]})]})};try{FlowMilestones.displayName="FlowMilestones",FlowMilestones.__docgenInfo={description:"",displayName:"FlowMilestones",props:{style:{defaultValue:null,description:"css style",name:"style",required:!1,type:{name:"Partial<CSSProperties>"}},curve:{defaultValue:{value:"Linear"},description:"curve type",name:"curve",required:!1,type:{name:"enum",value:[{value:'"Linear"'},{value:'"MonotoneX"'},{value:'"MonotoneY"'},{value:'"Natural"'},{value:'"Step"'},{value:'"StepAfter"'},{value:'"StepBefore"'},{value:'"BasisOpen"'},{value:'"CardinalOpen"'},{value:'"CatmullRomOpen"'},{value:'"BasisClosed"'},{value:'"CardinalClosed"'},{value:'"CatmullRomClosed"'},{value:'"LinearClosed"'}]}},points:{defaultValue:null,description:"points along path",name:"points",required:!0,type:{name:"PositionSpec[]"}},transition:{defaultValue:null,description:"transition",name:"transition",required:!1,type:{name:"FlowAnimationProp"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/annotation/stories/flowchart/FlowMilestones.tsx#FlowMilestones"]={docgenInfo:FlowMilestones.__docgenInfo,name:"FlowMilestones",path:"packages/annotation/stories/flowchart/FlowMilestones.tsx#FlowMilestones"})}catch(__react_docgen_typescript_loader_error){}const Template=args=>(0,jsx_runtime.jsx)(src.Qs,{...args});const simpleLine=()=>(0,jsx_runtime.jsx)(FlowMilestones,{points:[["A",80],["D",80]]});simpleLine.storyName="simple line",simpleLine.parameters={storySource:{source:'<FlowMilestones points={[["A", 80], ["D", 80]]} />'}};const complexLine=()=>(0,jsx_runtime.jsx)(FlowMilestones,{points:[["A",80],["D",80],["D",20],["B",20],["B",70]],style:{fillOpacity:0}});complexLine.storyName="complex line",complexLine.parameters={storySource:{source:'<FlowMilestones points={[["A", 80], ["D", 80], ["D", 20], ["B", 20], ["B", 70]]} style={{\n  fillOpacity: 0\n}} />'}};const naturalCurve=()=>(0,jsx_runtime.jsx)(FlowMilestones,{points:[["A",80],["D",80],["D",20],["B",20],["B",70]],curve:"Natural"});naturalCurve.storyName="natural curve",naturalCurve.parameters={storySource:{source:'<FlowMilestones points={[["A", 80], ["D", 80], ["D", 20], ["B", 20], ["B", 70]]} curve={"Natural"} />'}};const slowTransition=()=>(0,jsx_runtime.jsx)(FlowMilestones,{points:[["A",80],["D",80],["D",20],["B",20],["B",70]],curve:"Natural",transition:{pathLength:{duration:3}}});slowTransition.storyName="slow transition",slowTransition.parameters={storySource:{source:'<FlowMilestones points={[["A", 80], ["D", 80], ["D", 20], ["B", 20], ["B", 70]]} curve={"Natural"} transition={{\n  pathLength: {\n    duration: 3\n  }\n}} />'}};const componentMeta={title:"Addons/Annotation/Flowchart/FlowPath",tags:["stories-mdx"],includeStories:["simpleLine","complexLine","naturalCurve","slowTransition"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{})}):_createMdxContent();function _createMdxContent(){const _components=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Addons/Annotation/Flowchart/FlowPath"}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"flowpath",children:"FlowPath"}),"\n","\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"FlowPath"})," creates an animated path."]}),"\n",(0,jsx_runtime.jsx)(dist.$4,{of:src.Qs}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"trajectory",children:"Trajectory"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The trajectory of ",(0,jsx_runtime.jsx)(_components.code,{children:"FlowPath"})," is determined by a series of points specified in prop ",(0,jsx_runtime.jsx)(_components.code,{children:"points"}),". There can be as few as two points to create a single line segment, or many points to create a complex path."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Click the milestone buttons in the examples below to see the animation."}),"\n",(0,jsx_runtime.jsxs)(dist.Xz,{children:[(0,jsx_runtime.jsx)(dist.oG,{name:"simple line",children:(0,jsx_runtime.jsx)(FlowMilestones,{points:[["A",80],["D",80]]})}),(0,jsx_runtime.jsx)(dist.oG,{name:"complex line",children:(0,jsx_runtime.jsx)(FlowMilestones,{points:[["A",80],["D",80],["D",20],["B",20],["B",70]],style:{fillOpacity:0}})})]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Note that for the animation to show-up correctly, the ",(0,jsx_runtime.jsx)(_components.code,{children:"fill-opacity"})," css attribute should be set to 0 for the path.\nThis can be achieved via themes, or by providing a ",(0,jsx_runtime.jsx)(_components.code,{children:"style"})," prop."]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"curves",children:"Curves"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["By default, ",(0,jsx_runtime.jsx)(_components.code,{children:"FlowPath"})," connects points with straight, i.e. linear, segments. Other interpolations between points can be set with prop ",(0,jsx_runtime.jsx)(_components.code,{children:"curve"}),"."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"natural curve",children:(0,jsx_runtime.jsx)(FlowMilestones,{points:[["A",80],["D",80],["D",20],["B",20],["B",70]],curve:"Natural"})})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"transitions",children:"Transitions"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The duration of the animation (and other animation settings) can be adjusted via prop ",(0,jsx_runtime.jsx)(_components.code,{children:"transition"}),"."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"slow transition",children:(0,jsx_runtime.jsx)(FlowMilestones,{points:[["A",80],["D",80],["D",20],["B",20],["B",70]],curve:"Natural",transition:{pathLength:{duration:3}}})})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"styling",children:"Styling"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Paths can be styled using css. Note, however, that the animation (managed by framer-motion) utilises property ",(0,jsx_runtime.jsx)(_components.code,{children:"strokeDasharray"}),", and this property should not be modified with custom settings."]})]})}}};const FlowPath_stories=componentMeta}}]);